{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar initialState = {\n  //원본 초기값\n  user: {\n    isLoggedIN: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport var loginAction = function loginAction(data) {\n  //  action 데이터를 바꾸고 싶을때 값을 따로만들어둔다\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction(data) {\n  return {\n    type: 'LOG_IN'\n  };\n};\nvar changeNickname2 = function changeNickname2(data) {\n  //  action 데이터를 바꾸고 싶을때 \n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\n\n//  action 데이터를 바꾸고 싶을때 \n// const changeNickname = {    \n//     type : 'CHANGE_NICKNAME',\n//     data : 'boogicho',\n// }\n\n//( 이전상태   , 액션)   => 다음상태\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["initialState","user","isLoggedIN","signUpData","loginData","post","mainPosts","loginAction","data","type","logoutAction","changeNickname2","rootReducer","state","arguments","length","undefined","action","_objectSpread","isLoggedIn"],"sources":["/Users/anex/Desktop/4.29최근공부/next11111/reducers/index.js"],"sourcesContent":["const initialState = {  //원본 초기값\n   user : {\n    isLoggedIN : false,\n    user: null,\n    signUpData: {},\n    loginData : {},\n   },\n   post:{\n    mainPosts:[]\n   }\n};\n\nexport const loginAction = (data)=>{           //  action 데이터를 바꾸고 싶을때 값을 따로만들어둔다\n    return {\n        type :'LOG_IN',\n        data,\n    }\n}\n\nexport const logoutAction = (data)=>{       \n    return {\n        type :'LOG_IN',\n    }\n}\n\n\nconst changeNickname2 =(data) => {    //  action 데이터를 바꾸고 싶을때 \n    return {\n        type : 'CHANGE_NICKNAME',\n        data,\n    }\n};\n\n//  action 데이터를 바꾸고 싶을때 \n// const changeNickname = {    \n//     type : 'CHANGE_NICKNAME',\n//     data : 'boogicho',\n// }\n\n                            //( 이전상태   , 액션)   => 다음상태\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type){\n        case 'LOG_IN':\n          return {\n            ...state,\n            user:{\n                ...state.user,\n                isLoggedIn :true,\n                user:action.data,\n            },\n          }\n          case 'LOG_OUT':\n            return {\n              ...state,\n              user:{\n                  ...state.user,\n                  isLoggedIn :false,\n                  user:null,\n              },\n            }    \n    }\n}\n\nexport default rootReducer;"],"mappings":";;;AAAA,IAAMA,YAAY,GAAG;EAAG;EACrBC,IAAI,EAAG;IACNC,UAAU,EAAG,KAAK;IAClBD,IAAI,EAAE,IAAI;IACVE,UAAU,EAAE,CAAC,CAAC;IACdC,SAAS,EAAG,CAAC;EACd,CAAC;EACDC,IAAI,EAAC;IACJC,SAAS,EAAC;EACX;AACH,CAAC;AAED,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAI,EAAG;EAAY;EAC3C,OAAO;IACHC,IAAI,EAAE,QAAQ;IACdD,IAAI,EAAJA;EACJ,CAAC;AACL,CAAC;AAED,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIF,IAAI,EAAG;EAChC,OAAO;IACHC,IAAI,EAAE;EACV,CAAC;AACL,CAAC;AAGD,IAAME,eAAe,GAAE,SAAjBA,eAAeA,CAAGH,IAAI,EAAK;EAAK;EAClC,OAAO;IACHC,IAAI,EAAG,iBAAiB;IACxBD,IAAI,EAAJA;EACJ,CAAC;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAE4B;AAC5B,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAqC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGd,YAAY;EAAA,IAAEiB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACR,IAAI;IACf,KAAK,QAAQ;MACX,OAAAS,aAAA,CAAAA,aAAA,KACKL,KAAK;QACRZ,IAAI,EAAAiB,aAAA,CAAAA,aAAA,KACGL,KAAK,CAACZ,IAAI;UACbkB,UAAU,EAAE,IAAI;UAChBlB,IAAI,EAACgB,MAAM,CAACT;QAAI;MACnB;IAEH,KAAK,SAAS;MACZ,OAAAU,aAAA,CAAAA,aAAA,KACKL,KAAK;QACRZ,IAAI,EAAAiB,aAAA,CAAAA,aAAA,KACGL,KAAK,CAACZ,IAAI;UACbkB,UAAU,EAAE,KAAK;UACjBlB,IAAI,EAAC;QAAI;MACZ;EACF;AAEb,CAAC;AAED,eAAeW,WAAW"},"metadata":{},"sourceType":"module"}