{"ast":null,"code":"var _jsxFileName = \"/Users/anex/Desktop/4.29\\u110E\\u116C\\u1100\\u1173\\u11AB\\u1100\\u1169\\u11BC\\u1107\\u116E/next11111/front/component/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from './hooks/useInput';\n\n// const FormWrapper = styled.form`\n// padding:40px\n// `;\n\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]);\n  const style = useMemo(() => ({\n    marginTop: 10\n  }), []); //div옆에 바로 스타일넣는경우가 있는데 그렇게 하면 절대 안됨 리렌더링해버림 인터넷느려짐 useMomo쓰던가 스타일컴포넌트쓰던가 \n\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"ID\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"password\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"LOgin\"), __jsx(Link, {\n    href: \"/singup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }, \"sign\")))));\n};\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\n/**  리렌더링 정리\n *   함수안이 다시실행되는건맞음 \n *   똑같은거면 바뀐게 없네하고 지나감\n *     바뀐부분만 리렌더링됨  \n *      그래서 만약에 <div style={style}>dgsdg</div>  이런식으로 직접 스타일을 주면 바뀐부분이라고 인식하고 계속 리렌더링해버림 성능저하됨 \n *                       {}   === {}    이게 다르다고 인식함 \n * \n *  정리 이전 컴포넌트랑 달라진 부분만 리렌더링해줌 !!!!\n */","map":{"version":3,"names":["React","useCallback","useMemo","useState","Form","Input","Button","Link","styled","PropTypes","useInput","LoginForm","setIsLoggedIn","id","onChangeId","password","onChangePassword","onSubmitForm","console","log","style","marginTop","__jsx","FormWrapper","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","value","onChange","required","type","htmlType","loading","href","propTypes","func","isRequired"],"sources":["/Users/anex/Desktop/4.29최근공부/next11111/front/component/LoginForm.js"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport {Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport  styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from './hooks/useInput';\n\n\n\n// const FormWrapper = styled.form`\n// padding:40px\n// `;\n\n\nconst LoginForm = ({setIsLoggedIn}) => {\n    const [id,onChangeId] = useInput('');\n    const [password, onChangePassword] = useInput('')\n   \n    const onSubmitForm = useCallback(()=>{\n        console.log(id,password);\n        setIsLoggedIn(true);\n    }, [id,password])\n\n\n    const style = useMemo(()=>({marginTop : 10}),[]);     //div옆에 바로 스타일넣는경우가 있는데 그렇게 하면 절대 안됨 리렌더링해버림 인터넷느려짐 useMomo쓰던가 스타일컴포넌트쓰던가 \n\n    return (\n        <FormWrapper onFinish = {onSubmitForm}>\n            {/* onFinish에는  e,prevent가 붙어있기때문에 따로 적을필요없다 */}\n            <div>\n                <label htmlFor=\"user-id\">ID</label>\n            </div>\n            <div>\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\n            </div>\n            <div>\n                <label htmlFor=\"user-password\">password</label>\n            </div>\n            <div>\n                <Input name= \"user-password\" type= \"password\" value={password} onChange={onChangePassword} required/>\n            </div>\n            <div style={style}>\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}>LOgin</Button>\n                {/* button에  htmlType=\"submit\"*/}\n                <Link href=\"/singup\"><a><Button>sign</Button></a></Link>\n            </div>\n        </FormWrapper>\n    );\n}\n\nLoginForm.propTypes = {\n    setIsLoggedIn:PropTypes.func.isRequired,\n}\nexport default LoginForm;\n\n \n/**  리렌더링 정리\n *   함수안이 다시실행되는건맞음 \n *   똑같은거면 바뀐게 없네하고 지나감\n *     바뀐부분만 리렌더링됨  \n *      그래서 만약에 <div style={style}>dgsdg</div>  이런식으로 직접 스타일을 주면 바뀐부분이라고 인식하고 계속 리렌더링해버림 성능저하됨 \n *                       {}   === {}    이게 다르다고 인식함 \n * \n *  정리 이전 컴포넌트랑 달라진 부분만 리렌더링해줌 !!!!\n */"],"mappings":"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"},"metadata":{},"sourceType":"module"}