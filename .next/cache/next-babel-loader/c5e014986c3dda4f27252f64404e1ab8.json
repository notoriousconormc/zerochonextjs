{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  //원본 초기값\n  user: {\n    isLoggedIN: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport const loginAction = data => {\n  //  action 데이터를 바꾸고 싶을때 값을 따로만들어둔다\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logoutAction = data => {\n  return {\n    type: 'LOG_IN'\n  };\n};\nconst changeNickname2 = data => {\n  //  action 데이터를 바꾸고 싶을때 \n  return {\n    type: 'CHANGE_NICKNAME',\n    data\n  };\n};\n\n//  action 데이터를 바꾸고 싶을때 \n// const changeNickname = {    \n//     type : 'CHANGE_NICKNAME',\n//     data : 'boogicho',\n// }\n\n//( 이전상태   , 액션)   => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","initialState","user","isLoggedIN","signUpData","loginData","post","mainPosts","loginAction","data","type","logoutAction","changeNickname2","rootReducer","state","action","_objectSpread","payload","isLoggedIn"],"sources":["/Users/anex/Desktop/4.29최근공부/next11111/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\n\n\n\n\nconst initialState = {  //원본 초기값\n   user : {\n    isLoggedIN : false,\n    user: null,\n    signUpData: {},\n    loginData : {},\n   },\n   post:{\n    mainPosts:[]\n   }\n};\n\nexport const loginAction = (data)=>{           //  action 데이터를 바꾸고 싶을때 값을 따로만들어둔다\n    return {\n        type :'LOG_IN',\n        data,\n    }\n}\n\nexport const logoutAction = (data)=>{       \n    return {\n        type :'LOG_IN',\n    }\n}\n\n\nconst changeNickname2 =(data) => {    //  action 데이터를 바꾸고 싶을때 \n    return {\n        type : 'CHANGE_NICKNAME',\n        data,\n    }\n};\n\n//  action 데이터를 바꾸고 싶을때 \n// const changeNickname = {    \n//     type : 'CHANGE_NICKNAME',\n//     data : 'boogicho',\n// }\n\n                            //( 이전상태   , 액션)   => 다음상태\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type){\n        case HYDRATE:\n            return{ ...state, ...action.payload };\n        case 'LOG_IN':\n          return {\n            ...state,\n            user:{\n                ...state.user,\n                isLoggedIn :true,\n                 user:action.data,\n            },\n          }\n          case 'LOG_OUT':\n            return {\n              ...state,\n              user:{\n                  ...state.user,\n                  isLoggedIn :false,\n                  user:null,\n              },\n            }    \n            default:\n              return state;\n    }\n}\n\nexport default rootReducer;"],"mappings":";;;;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAK5C,MAAMC,YAAY,GAAG;EAAG;EACrBC,IAAI,EAAG;IACNC,UAAU,EAAG,KAAK;IAClBD,IAAI,EAAE,IAAI;IACVE,UAAU,EAAE,CAAC,CAAC;IACdC,SAAS,EAAG,CAAC;EACd,CAAC;EACDC,IAAI,EAAC;IACJC,SAAS,EAAC;EACX;AACH,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAG;EAAY;EAC3C,OAAO;IACHC,IAAI,EAAE,QAAQ;IACdD;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAME,YAAY,GAAIF,IAAI,IAAG;EAChC,OAAO;IACHC,IAAI,EAAE;EACV,CAAC;AACL,CAAC;AAGD,MAAME,eAAe,GAAGH,IAAI,IAAK;EAAK;EAClC,OAAO;IACHC,IAAI,EAAG,iBAAiB;IACxBD;EACJ,CAAC;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAE4B;AAC5B,MAAMI,WAAW,GAAGA,CAACC,KAAK,GAAGb,YAAY,EAAEc,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACL,IAAI;IACf,KAAKV,OAAO;MACR,OAAAgB,aAAA,CAAAA,aAAA,KAAWF,KAAK,GAAKC,MAAM,CAACE,OAAO;IACvC,KAAK,QAAQ;MACX,OAAAD,aAAA,CAAAA,aAAA,KACKF,KAAK;QACRZ,IAAI,EAAAc,aAAA,CAAAA,aAAA,KACGF,KAAK,CAACZ,IAAI;UACbgB,UAAU,EAAE,IAAI;UACfhB,IAAI,EAACa,MAAM,CAACN;QAAI;MACpB;IAEH,KAAK,SAAS;MACZ,OAAAO,aAAA,CAAAA,aAAA,KACKF,KAAK;QACRZ,IAAI,EAAAc,aAAA,CAAAA,aAAA,KACGF,KAAK,CAACZ,IAAI;UACbgB,UAAU,EAAE,KAAK;UACjBhB,IAAI,EAAC;QAAI;MACZ;IAEH;MACE,OAAOY,KAAK;EAAC;AAE3B,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}