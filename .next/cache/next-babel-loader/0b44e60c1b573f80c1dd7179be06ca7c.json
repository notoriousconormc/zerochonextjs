{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/anex/Desktop/4.29\\u110E\\u116C\\u1100\\u1173\\u11AB\\u1100\\u1169\\u11BC\\u1107\\u116E/next11111/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import 'antd/dist/antd.css';\nimport Head from 'next/head';\nimport wrapper from '../store/configureStore';\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component;\n  return (\n    // 원래 리덕스쓰려면 provider로 감싸줘야하는데 넥스트랑같이사용하면 감쌀필요없음 \n    __jsx(React.Fragment, null, __jsx(Head, {\n      store: store,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }), __jsx(\"title\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, \"NodeBird\")), __jsx(Component, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }))\n  );\n};\n_c = NodeBird;\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\nexport default _c2 = wrapper.withRedux(NodeBird);\nvar _c, _c2;\n$RefreshReg$(_c, \"NodeBird\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","Head","wrapper","NodeBird","_ref","Component","__jsx","Fragment","store","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","charSet","_c","propTypes","elementType","isRequired","_c2","withRedux","$RefreshReg$"],"sources":["/Users/anex/Desktop/4.29최근공부/next11111/pages/_app.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import 'antd/dist/antd.css';\nimport Head from 'next/head';\nimport wrapper from '../store/configureStore';\n\n\nconst NodeBird = ({Component}) => {\n    return (\n        // 원래 리덕스쓰려면 provider로 감싸줘야하는데 넥스트랑같이사용하면 감쌀필요없음 \n        <>   \n        <Head store={store}>\n            <meta charSet=\"utf-8\"/>\n            <title>NodeBird</title>\n        </Head>\n        <Component/>\n        </>\n    )\n};\nNodeBird.propTypes = {\n    Component:PropTypes.elementType.isRequired,\n}\n\nexport default wrapper.withRedux(NodeBird); "],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC;AACA,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,OAAO,MAAM,yBAAyB;AAG7C,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAoB;EAAA,IAAfC,SAAS,GAAAD,IAAA,CAATC,SAAS;EACxB;IACI;IACAC,KAAA,CAAAP,KAAA,CAAAQ,QAAA,QACAD,KAAA,CAACL,IAAI;MAACO,KAAK,EAAEA,KAAM;MAAAC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACfT,KAAA;MAAMU,OAAO,EAAC,OAAO;MAAAP,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAE,EACvBT,KAAA;MAAAG,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,cAAuB,CACpB,EACPT,KAAA,CAACD,SAAS;MAAAI,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAE;EACT;AAEX,CAAC;AAACE,EAAA,GAXId,QAAQ;AAYdA,QAAQ,CAACe,SAAS,GAAG;EACjBb,SAAS,EAACL,SAAS,CAACmB,WAAW,CAACC;AACpC,CAAC;AAED,eAAAC,GAAA,GAAenB,OAAO,CAACoB,SAAS,CAACnB,QAAQ,CAAC;AAAC,IAAAc,EAAA,EAAAI,GAAA;AAAAE,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module"}