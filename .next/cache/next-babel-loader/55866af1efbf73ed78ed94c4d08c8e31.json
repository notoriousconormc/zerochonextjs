{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nexport const initialState = {\n  //원본 초기값\n  user: {\n    isLoggedIN: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  }\n};\nexport const loginAction = data => {\n  //  action 데이터를 바꾸고 싶을때 값을 따로만들어둔다\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logoutAction = data => {\n  return {\n    type: 'LOG_IN'\n  };\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        user: action.data\n      });\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        user: null\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","user","isLoggedIN","signUpData","loginData","loginAction","data","type","logoutAction","reducer","state","action","_objectSpread","isLoggedIn"],"sources":["/Users/anex/Desktop/4.29최근공부/next11111/reducers/user.js"],"sourcesContent":["\n\nexport const initialState = {  //원본 초기값\n    user : {\n     isLoggedIN : false,\n     user: null,\n     signUpData: {},\n     loginData : {},\n    },\n    \n };\n\n export const loginAction = (data)=>{           //  action 데이터를 바꾸고 싶을때 값을 따로만들어둔다\n    return {\n        type :'LOG_IN',\n        data,\n    }\n}\n\nexport const logoutAction = (data)=>{       \n    return {\n        type :'LOG_IN',\n    }\n}\n \n\n\n const reducer = ( state = initialState,action) =>{\n    switch (action.type){\n        case 'LOG_IN':\n          return {\n                ...state,\n                isLoggedIn :true,\n                 user:action.data,\n        \n          }\n          case 'LOG_OUT':\n            return {\n                  ...state,\n                  isLoggedIn :false,\n                  user:null,\n            }    \n        default: \n        return state;\n    }\n }\n\n export default reducer;"],"mappings":";;;;;AAEA,OAAO,MAAMA,YAAY,GAAG;EAAG;EAC3BC,IAAI,EAAG;IACNC,UAAU,EAAG,KAAK;IAClBD,IAAI,EAAE,IAAI;IACVE,UAAU,EAAE,CAAC,CAAC;IACdC,SAAS,EAAG,CAAC;EACd;AAEH,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAG;EAAY;EAC5C,OAAO;IACHC,IAAI,EAAE,QAAQ;IACdD;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAME,YAAY,GAAIF,IAAI,IAAG;EAChC,OAAO;IACHC,IAAI,EAAE;EACV,CAAC;AACL,CAAC;AAIA,MAAME,OAAO,GAAGA,CAAEC,KAAK,GAAGV,YAAY,EAACW,MAAM,KAAI;EAC9C,QAAQA,MAAM,CAACJ,IAAI;IACf,KAAK,QAAQ;MACX,OAAAK,aAAA,CAAAA,aAAA,KACSF,KAAK;QACRG,UAAU,EAAE,IAAI;QACfZ,IAAI,EAACU,MAAM,CAACL;MAAI;IAGvB,KAAK,SAAS;MACZ,OAAAM,aAAA,CAAAA,aAAA,KACSF,KAAK;QACRG,UAAU,EAAE,KAAK;QACjBZ,IAAI,EAAC;MAAI;IAEnB;MACA,OAAOS,KAAK;EAAC;AAEpB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}